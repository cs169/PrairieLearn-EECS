<!DOCTYPE html>
<html>
  <head>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.0.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js" type="text/javascript"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js" type="text/javascript"></script>

    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/fe1e3d4772.js" crossorigin="anonymous"></script>

    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  </head>
  <body>
    <div id="questions page">
    <nav>
      <div class="nav-wrapper">
        <div id="name" style="font-size:23px">Create New Assessment</div>
      </div>
    </nav>

    <div class="qcol rightcol">
      <p>Configurations</p>
      <form id="config">
        <div class='configs'>
          <div class="form-group w-75">
            <label class='question_title'>Assessment name:</label>
            <input class="form-control" type="text" placeholder="Enter assessment name" name="title" size=36>
          </div>
          <div class="form-row">
            <div class="col-md-5 mb-3">
              <label class='question_title'>Type:</label>
              <select class="form-control" name="type">
                <option>Exam</option>
                <option>Homework</option>
              </select>
            </div>
            <div class="col-md-5 mb-3">
              <label class='question_title'>Credit:</label>
              <input class="form-control" type="text" placeholder="Enter integer" name="credit" size=4>
            </div>
          </div>
          <div class="form-row">
            <div class="col-md-5 mb-3">
              <label class='question_title'>Number:</label>
              <input class="form-control" type="text" placeholder="Enter integer" name="number" size=4>
            </div>
            <div class="col-md-5 mb-3">
              <label class='question_title'>Set:</label>
              <input class="form-control" type="text" placeholder="Enter set name" name="set" size=4>
            </div>
          </div>
          <hr>
          <div class="access_forms">
            <div class="form-group w-50">
              <label class='question_title'>Allow access to:</label>
              <select class="form-control" name="role">
                <option>Student</option>
                <option>TA</option>
                <option>Instructor</option>
              </select>
            </div>
            <label class='question_title'>Start date:</label>
            <div class="form-row">
              <div class="col-md-5 mb-3">
                <input class="form-control" type="date" min="2021-01-01" max="2100-12-31" name="startDate">
              </div>
              <div class="col-md-5 mb-3">
                <input class="form-control" type="time" min="00:00" max="23:59" name="startTime">
              </div>
            </div>
            <label class='question_title'>End date:</label>
            <div class="form-row">
              <div class="col-md-5 mb-3">
                <input class="form-control" type="date" min="2021-03-02" max="2100-12-31" name="endDate">
              </div>
              <div class="col-md-5 mb-3">
                <input class="form-control" type="time" min="00:00" max="23:59" name="endTime">
              </div>
            </div>
            <hr>
          </div>
          <button class="btn btn-primary btn-lg" type="button" id="add_access">+</button>
          <button class="btn btn-primary btn-lg" type="button" id="delete_access">-</button>
          <script>
          $(document).ready(function(){
            // Spawns new access forms
            $('#add_access').click(function(){
              // Create clone of <div class='input-form'>
              var newel = $('.access_forms:last').clone(true);
              // Add after last <div class='input-form'>
              $(newel).insertAfter(".access_forms:last");
            });
            // Deletes previous access forms
            $('#delete_access').click(function() {
              var count = $('.access_forms').length;
              if (count > 1)  // change this to 1 if you want at least one to show
                $( ".access_forms:last" ).remove();
            });
          });
          </script>
        </div><br>
      </form>
    </div>

    <div class="qcol middlecol">
      <p class="test">Selected Questions</p>
      <%= render 'selected_questions' %>
    </div>

    <div class="qcol leftcol">
      <p>Questions</p>
      
      <%= form_tag search_questions_path, method: :post do %>
        <%= text_field_tag :search, nil, placeholder: "Search for a question..." %>
        <%= submit_tag "Search" %>
      <% end %>
      
      <%= render 'search_questions' %>  

      <script>
        $(document).on('submit', 'form', function(event) {
          event.preventDefault();
          var searchValue = $('input[name="search"]').val();
          $.ajax({
            url: $(this).attr('action'),
            type: $(this).attr('method'),
            data: { search: searchValue },
            success: function(response) {
              $('.qcontainer').html(response);
              $('.qcontainer .draggable-question').css('text-align','left').draggable({
                helper: "clone",
                connectToSortable: ".mcontainer",
                revert: "invalid"
              });
              const draggables = document.querySelectorAll('.draggable-question')
              for (let i = 0; i < draggables.length; i ++) {
                  const draggable = draggables[i];
                  const pointbox = draggable.getElementsByClassName("form-control");
                  pointbox[0].style.display = "inline";
                  pointbox[0].style.float = "right";
                  pointbox[0].style.marginTop = "-2%";
              }
            }
          });
        });
      </script>
    </div>



  </div>
    <div class="footer">
      <%= link_to 'Repo', repo_path(), :class => 'btn btn-primary' %>
      <%= link_to 'Logout', logout_path(), :class => 'btn btn-primary' %>
      <button class="btn btn-primary" type="button" id="export">Export</button>
      <a id="downloadAnchorElem" style="display:none"></a>
      <script>

        function uuidCall() {
          return new Promise(function(resolve, reject) {
            $.ajax({
              url: "https://www.uuidgenerator.net/api/version4",
              type: "GET",
              success: function(data) {
                // UUID Received!
                resolve(data)
              },
              error: function(err) {
                reject(err)
              }
            });
          });
        }

        $(document).ready(function(){
          // trigger export
          $('#export').click(function(){
            jsonData = {}
            uuidCall().then(function(data) {
              jsonData['uuid'] = data
              dateData = {} // store the date information for jsonDate
              allowAccessData = {}
              var formData = $("#config").serializeArray();
              $.each(formData, function() {
                switch (this.name) {
                  case 'role':
                  case 'mode':
                    allowAccessData[this.name] = this.value
                    break;
                  case 'credit':
                    allowAccessData[this.name] = new Number(this.value)
                    break;
                  case 'startDate':
                  case 'endDate':
                  case 'startTime':
                  case 'endTime':
                    dateData[this.name] = this.value
                    break;
                  default:
                    jsonData[this.name] = this.value
                }
              });
              allowAccessData['startDate'] = dateData.startDate + 'T' + dateData.startTime
              allowAccessData['endDate'] = dateData.endDate + 'T' + dateData.endTime

              if (Object.keys(allowAccessData).length > 0){
                allowAccessData['mode'] = 'Public'
                if ('allowAccess' in jsonData){
                  jsonData.allowAccess.push(allowAccessData)
                } else {
                  jsonData.allowAccess = [allowAccessData]
                }
              }

              const midZones = document.getElementsByClassName("zone");
              if (!(midZones.length == 1 && 
                  midZones[0].querySelector("#zone_title").value == "" &&
                  midZones[0].querySelector("#zone_comment").value == "" &&
                  midZones[0].querySelectorAll('.draggable-question[type="outter"]').length == 0)) {
                jsonData.zones = [];
                for (let i = 0; i < midZones.length; i++) {
                  jsonData.zones.push({
                    title: midZones[i].querySelector("#zone_title").value,
                    comment: midZones[i].querySelector("#zone_comment").value,
                    questions: []
                  });
                  const midQuestions = midZones[i].querySelectorAll('.draggable-question[type="outter"]');
                  for (let j = 0; j < midQuestions.length; j++) {
                    const alternatives = midQuestions[j].querySelectorAll('.draggable-question[type="inner"]');
                    if (alternatives.length > 0) {
                      const pt = new Number(midQuestions[j].querySelector(".form-control").value);
                      jsonData.zones[i].questions.push({
                        numberChoose: new Number(midQuestions[j].querySelector("#numchoose").value),
                        points: pt,
                        alternatives: []
                      });
                      jsonData.zones[i].questions[j].alternatives.push({
                        id: midQuestions[j].getAttribute('name'),
                        points: pt
                      });
                      for (let k = 0; k < alternatives.length; k++) {
                        jsonData.zones[i].questions[j].alternatives.push({
                          id: alternatives[k].getAttribute('name'),
                          points: pt
                        });
                      }
                    } else {
                      jsonData.zones[i].questions.push({
                        id: midQuestions[j].getAttribute('name'),
                        points: new Number(midQuestions[j].querySelector(".form-control").value)
                      });
                    }
                  }
                }
              }              

              var dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(jsonData, null, '\t'));
              var dlAnchorElem = document.getElementById('downloadAnchorElem');
              dlAnchorElem.setAttribute("href",     dataStr     );
              dlAnchorElem.setAttribute("download", "infoAssessment.json");
              dlAnchorElem.click();
            }).catch(function(err){
              console.log(err)
            })
          });
        });
        </script>
    </div>

  </body>
</html>
