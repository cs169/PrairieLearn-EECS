<div class="gutter-2 row justify-content-end px-1">
  <div class="col-md-auto">
    <button class="btn btn-default" type="button" id="add_zones">+ Zone</button>
  </div>
  <div class="col-md-auto">
    <button type="button" class="btn btn-default" data-toggle="collapse" href="#tutorial" role="button" aria-expanded="false" aria-controls="tutorial">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
        <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
      </svg>
    </button>
  </div>
</div>
<div class="collapse" id="tutorial">
  <div class="card card-body">
    Click +Zone to create a zone. Drag questions from left to right to include questions in the zone, or click +pool button to create a question pool.
  </div>
</div>
<div class="sqcontainer">
    <div class="zone">
        <div class="form-row">
            <div class="col-md-auto mb-1">
                <input class="form-control" type="text" id="zone_title" size=1 style="min-width: 190px;" placeholder="Title" aria-label="Title">
            </div>
            <div class="col-md-auto mb-1">
                <input class="form-control" type="text" id="zone_comment" size=1 style="min-width: 240px;"  placeholder="Comment" aria-label="Comment">
            </div>
            <div class="col-auto">
              <button class="btn btn-default" type="button" id="add_pool">+Pool</button>
            </div>
            <span class="close col-auto" id="delete_zone" style="color: red;">&times;</span>
        </div>
        <div class="mcontainer">
        </div>
    </div>
    <hr>
</div>


<script>
function makeDroppableForInner(container) {
    $(container).droppable({
        accept: ".draggable-question",
        drop: function(event, ui) {
            var item = $(ui.draggable);
            item.attr("type", "inner"); 
            item.width($(this).width()-40);
            item.find("span").css('display','block');
            var points = item[0].getElementsByClassName("form-control")[0];
            item[0].style.height = "auto";
            item[0].style.width = document.body.querySelectorAll(".mcontainer")[0].offsetWidth;
            points.style.display = "inline";
            points.style.float = "right";
            points.style.marginTop = "-1.5%";
            points.style.marginRight = "2.5%";
            var close = item.find("span");
            close.click(function() {
                item.remove();
            });
            
            var inputField = points.parentNode.querySelector("input[name='assessment_credit']");
            // hide the input field
            inputField.setAttribute("hidden", true);
            // hide the form elements
            $(points).next().hide();
            
            // remove collapse in the alternative container
            var collapseButton = item.find(".btn");
            var collapseContainer = item.find(".collapse");
            collapseButton.remove();
            collapseContainer.remove();
        }
    }).sortable({
        revert: false
    });
}

var count = 0;

function makeDroppableForOutter(container) {
  $(container).droppable({
    accept: ".draggable-question",
    drop: function(event, ui) {
      var item = $(ui.draggable);
      item.attr("type", "outter"); 
      item.width($(this).width()-40);
      item.find("span").css('display','block');
      var points = item[0].getElementsByClassName("form-control")[0];
      item[0].style.height = "auto";
      item[0].style.width = document.body.querySelectorAll(".mcontainer")[0].offsetWidth;
      points.style.display = "inline";
      points.style.float = "right";
      points.style.marginTop = "-1.5%";
      points.style.marginRight = "2.5%";
      var close = item.find("span");
      close.click(function() {
          item.remove();
      });
      
      // show the hidden input field
      var inputField = points.parentNode.querySelector("input[name='assessment_credit']");
      inputField.removeAttribute("hidden");
      // Show hidden form elements
      $(points).next().show();

      // Add collapse container to dropped item if it doesn't exist already
      var collapseContainer = item.find(".collapse");
      if (collapseContainer.length == 0) {
        var collapseId = "collapse-" + count;
        count++;
        collapseContainer = $("<div/>", {
          class: "collapse",
          id: collapseId,
          html: "<input class='form-control' type='text' id='numchoose' size='1' style='-width: 150px;' placeholder='NumberChoose' aria-label='NumberChoose'><div class='mcontainer'></div>"
        });
        item.append(collapseContainer);
        makeDroppableForInner(collapseContainer.find(".mcontainer"));
        var collapseButton = $("<button/>", {
          class: "btn btn-sm",
          style: "background-color: white;",
          type: "button",
          "data-toggle": "collapse",
          "data-target": "#" + collapseId,
          "aria-expanded": "false",
          "aria-controls": collapseId,
          html: "<i class='fas fa-chevron-down fa-2xs fa-rotate-270'></i>"
        });
        
        collapseButton.on("click", function() {
            $(this).find(".fa-chevron-down").toggleClass("fa-rotate-270");
        });

        item.prepend(collapseButton);
      }
    }
  }).sortable({
    revert: false
  });
}

$(document).ready(function() {
    // Make all existing containers droppable
    $('.mcontainer').each(function() {
        makeDroppableForOutter(this);
    });

    // Add a new zone on click of + Zone button
    $('#add_zones').click(function() {
        // Get the last .zone element
        var lastZone = document.querySelector('.zone:last-of-type');

        // Clone the last .zone element
        var newZone = lastZone.cloneNode(true);

        // Clear mcontainer in new zone
        newZone.querySelector('.mcontainer').innerHTML = '';

        // Clear input fields in new zone
        newZone.querySelectorAll('input').forEach(function(input) {
            input.value = '';
        });

        // Create a new <hr> element
        var hr = document.createElement('hr');

        // Add the <hr> after the last <div class='zone'>
        lastZone.parentNode.insertBefore(hr, lastZone.nextSibling);
        lastZone.parentNode.insertBefore(newZone, hr.nextSibling);

        // Make the new zone droppable
        makeDroppableForOutter(newZone.querySelector('.mcontainer'));
    });

    // Remove zone on close button click
    $(document).on('click', '.zone .close', function() {
        // Define the confirmation message
        var title =  $(this).closest('.zone').find('#zone_title').val().trim();
        var message = "Are you sure you want to delete zone " + title + "?";

        // Display the confirmation pop-up
        var confirmed = window.confirm(message);

        // Check the user's response
        if (confirmed) {
            var count = $('.zone').length;
            if (count > 1) {
                // Get the current zone and the <hr> element
                var currentZone = $(this).closest('.zone');
                var hr = currentZone.prev();

                // Remove both the current zone and the <hr> element
                currentZone.remove();
                hr.remove();
            } else {
                // Get the last .zone element
                var lastZone = document.querySelector('.zone:last-of-type');

                // Clear mcontainer in lastzone
                lastZone.querySelector('.mcontainer').innerHTML = '';
        
                // Clear input fields in lastzone
                lastZone.querySelectorAll('input').forEach(function(input) {
                    input.value = '';
                });
            }

            var firstZone = document.querySelector('.zone:first-of-type');

            // Check if the first zone has an hr element
            if (firstZone.previousElementSibling && firstZone.previousElementSibling.tagName.toLowerCase() == 'hr') {
                // Remove the hr element
                firstZone.previousElementSibling.remove();
            }
        }
    });

    // Add a new zone on click of + Zone button
    $('#add_pool').click(function() {
      
    });

});
</script>

